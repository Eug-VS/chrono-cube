{"version":3,"sources":["requests.ts","pages/Timer/TimerButton.tsx","components/SolutionCard/SolutionCard.tsx","pages/Timer/Timer.tsx","components/Loading/Loading.tsx","pages/Scoreboard/Scoreboard.tsx","pages/Contribute/Contribute.tsx","pages/Profile/Registration.tsx","pages/Profile/Profile.tsx","index.tsx"],"names":["baseApiUrl","baseUrl","get","url","axios","post","data","useStyles","makeStyles","theme","root","textAlign","padding","spacing","background","palette","elevation3","marginTop","convertTimeToString","timeDelta","resultTime","minute","Math","floor","second","mill","TimerButton","registerResult","classes","useState","time","setTime","mode","setMode","useEffect","timestamp","Date","now","repeater","setInterval","clearInterval","handleKeyPress","event","preventDefault","keyCode","handleKeyUp","window","addEventListener","removeEventListener","Paper","className","Typography","variant","color","helperColor","composeHelperText","DATE_FORMAT","month","day","year","hour","elevation2","margin","menu","SolutionCard","removeThisCard","anchorEl","setAnchorEl","author","username","date","handleClose","Card","CardHeader","avatar","Avatar","toUpperCase","title","subheader","toLocaleString","action","IconButton","onClick","currentTarget","Menu","open","Boolean","keepMounted","onClose","MenuItem","id","delete","then","CardContent","Grid","container","direction","justify","alignItems","item","result","primary","cell","Timer","user","recentSolutions","setRecentSolutions","setPage","removeSolution","filter","solution","type","sectionName","Button","size","response","concat","name","itemSize","itemCount","length","renderItem","index","style","Loading","CircularProgress","display","justifyContent","width","Scoreboard","solutions","setSolutions","updateSolutions","setTimeout","mono","marginRight","height","Contribute","startIcon","href","Link","List","developers","map","developer","githubUrl","key","ListItem","alt","src","component","role","Divider","Registration","setUser","setUsername","isRememberMe","setIsRememberMe","TextField","label","value","onChange","target","FormControlLabel","control","Checkbox","checked","localStorage","setItem","catch","err","Profile","profileSolutions","setProfileSolutions","reverse","clear","App","page","headerContents","app","profile","scoreboard","contribute","userId","getItem","Page","logo","icon","contents","document","body","overflow","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.705ad471.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst baseUrl = 'https://eugvs.pythonanywhere.com/';\nconst baseApiUrl = baseUrl + 'api/';\n\nexport const get = (url: string): Promise<AxiosResponse> => axios.get(baseApiUrl + url);\n\nexport const del = (url: string): Promise<AxiosResponse> => axios.delete(baseApiUrl + url);\n\nexport const post = (url: string, data: object): Promise<AxiosResponse> => axios.post(baseApiUrl + url, data);\n\n","import React, { useState, useEffect } from 'react';\n\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(5),\n    background: theme.palette.background.elevation3,\n    marginTop: theme.spacing(10),\n  },\n}));\n\n\ninterface PropTypes {\n  registerResult: (result: string) => void;\n}\n\ntype Mode = 'idle' | 'countdown' | 'running' | 'over';\n\n\nconst TimerButton: React.FC<PropTypes> = ({ registerResult }) => {\n  const classes = useStyles();\n\n  const SPACE = 32;\n  const maxCountdown = 15000;\n  const [time, setTime] = useState<string>('00:00:00');\n  const [mode, setMode] = useState<Mode>('idle');\n\n  useEffect(()=> {\n    const timestamp = Date.now();\n\n    if (mode === 'countdown') {\n      const repeater = setInterval(() => {\n        const timeDelta = maxCountdown - (Date.now() - timestamp);\n        if (timeDelta <= 0) setMode('over');\n        setTime(convertTimeToString(timeDelta));\n      }, 10);\n      return (): void => clearInterval(repeater);\n    }\n\n    if (mode === 'running') {\n      const repeater = setInterval(() => {\n        setTime(convertTimeToString(Date.now() - timestamp));\n      }, 10);\n      return (): void => clearInterval(repeater);\n    }\n\n    if (mode === 'over') {\n      setTime('00:00:00');\n    }\n  }, [mode]);\n\n  const handleKeyPress = (event: KeyboardEvent): void => {\n    event.preventDefault();\n    if (event.keyCode === SPACE && mode === 'idle' ) setMode('countdown');\n  };\n\n  const handleKeyUp = (event: KeyboardEvent): void => {\n    if (event.keyCode === SPACE) {\n      if (mode === 'running') {\n        registerResult(time);\n        setMode('idle');\n      } else if (mode === 'over') {\n        setMode('idle');\n      } else {\n        setMode('running');\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp);\n    window.addEventListener('keypress', handleKeyPress);\n\n    return (): void => {\n      window.removeEventListener('keyup', handleKeyUp);\n      window.removeEventListener('keypress', handleKeyPress);\n    };\n  });\n\n  const composeHelperText = (): string => {\n    switch (mode) {\n      case 'running': return 'Go fast!';\n      case 'countdown': return 'Release SPACE to begin';\n      case 'over': return 'You are too late!';\n      default: return 'Hold SPACE to start countdown';\n    }\n  };\n\n  const helperColor = (): 'primary' | 'secondary' | 'textSecondary' => {\n    switch (mode) {\n      case 'running': return 'primary';\n      case 'over': return 'secondary';\n      default: return 'textSecondary';\n    }\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h1\"> {time} </Typography>\n      <Typography variant=\"h5\" color={helperColor()}>\n        {composeHelperText()}\n      </Typography>\n    </Paper>\n  );\n};\n\nconst convertTimeToString = (timeDelta: number): string => {\n  let resultTime = '';\n\n  const minute = Math.floor(timeDelta / 60000);\n  if (minute < 10) resultTime += '0';\n  resultTime += minute + ':';\n\n  let second = Math.floor(timeDelta / 1000);\n  if (second > 59) second %= 60;\n  if (second < 10) resultTime += '0';\n  resultTime += second + ':';\n\n  const mill = Math.floor((timeDelta % 1000) / 10);\n  if (mill < 10) resultTime += '0';\n  resultTime += mill;\n\n  return resultTime;\n};\n\n\nexport default TimerButton;\n","import React, { useState } from 'react';\n\nimport {\n  Typography,\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Avatar,\n  Grid,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport { Solution } from '../../types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { del } from '../../requests';\n\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    background: theme.palette.background.elevation2,\n\n    '& .MuiTypography-h3': {\n      margin: theme.spacing(2),\n    },\n  },\n  menu: {\n    '& ul': {\n      background: theme.palette.background.elevation3,\n    }\n  },\n}));\n\n\ninterface PropTypes {\n  data: Solution;\n  removeThisCard: (id: number) => void;\n}\n\n\nconst SolutionCard: React.FC<PropTypes> = ({ data, removeThisCard }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n\n  const author = data.author? data.author.username : 'anonymous';\n  const date = new Date(data.date);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleDelete = (): void => {\n    del(`solutions/${data.id}/`).then(() => {\n      removeThisCard(data.id);\n    });\n    handleClose();\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          author === 'anonymous'?\n            (<Avatar/>)\n            :\n            (<Avatar>{author[0].toUpperCase()}</Avatar>)\n        }\n        title={author}\n        subheader={date.toLocaleString('default', DATE_FORMAT)}\n        action={\n          <IconButton onClick={handleOpenMenu}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        keepMounted\n        onClose={handleClose}\n        className={classes.menu}\n      >\n        <MenuItem onClick={handleDelete}>\n          <DeleteIcon />\n          Delete\n        </MenuItem>\n      </Menu>\n      <CardContent>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TimerIcon/>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h3\" color=\"primary\">\n              { data.result }\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n};\n\nexport default SolutionCard;\n","import React from 'react';\n\nimport { post } from '../../requests';\n\nimport {\n  Window,\n  ContentSection,\n  SmartList,\n} from 'react-benzin';\nimport { User, Solution, RenderPropTypes } from '../../types';\n\nimport TimerButton from './TimerButton';\nimport SolutionCard from '../../components/SolutionCard/SolutionCard';\n\nimport { Button, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  primary: {\n    padding: theme.spacing(4),\n  },\n  cell: {\n    padding: theme.spacing(5),\n  },\n}));\n\n\ninterface PropTypes {\n  user: User;\n  recentSolutions: Solution[];\n  setRecentSolutions: (newRecentSolutions: Solution[]) => void;\n  setPage: (newPage: string) => void;\n}\n\n\nconst Timer: React.FC<PropTypes> = ({ user, recentSolutions, setRecentSolutions, setPage }) => {\n  const classes = useStyles();\n\n  const registerResult = (result: string): void => {\n    const solution = { 'author_id': user.id, result };\n    post('solutions/', solution).then(response => {\n      setRecentSolutions([response.data].concat(recentSolutions));\n    });\n  };\n\n  const handleLearnMore = (): void => {\n    setPage('contribute');\n  };\n\n  const handleLogin = (): void => {\n    setPage('profile');\n  };\n\n  const removeSolution = (id: number): void => {\n    setRecentSolutions(recentSolutions.filter((solution => solution.id !== id)));\n  };\n\n  const renderItem: React.FC<RenderPropTypes> = ({ index, style }) => {\n    const solution = recentSolutions[index];\n    return (\n      <div style={style} className={classes.cell}>\n        <SolutionCard data={solution} removeThisCard={removeSolution} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Window type=\"primary\">\n        <div className={classes.primary}>\n          <ContentSection sectionName=\"Welcome to ChronoCube!\">\n            <p>\n              ChronoCube is a professional speedcubing timer.\n              Share your results publicly - let everyone see your progress and\n              achievements!\n              Every speedcuber will benefit\n              from using it - both amateur and professional!\n            </p>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLearnMore}> Learn more </Button>\n          </ContentSection>\n          {user.id === null &&\n          <ContentSection sectionName=\"Log into an account\">\n            <p> Tell us your name so we can track your progress</p>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLogin} size=\"large\"> Login </Button>\n          </ContentSection>\n          }\n          <TimerButton registerResult={registerResult} />\n        </div>\n      </Window>\n      <Window type=\"secondary\" name=\"Recent solutions\">\n        <SmartList\n          itemSize={270}\n          itemCount={recentSolutions.length}\n          renderItem={renderItem}\n        />\n      </Window>\n    </>\n  );\n};\n\n\nexport default Timer;\n","import React from 'react';\n\nimport {\n  Card,\n  CardHeader,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    background: theme.palette.background.elevation2,\n  },\n}));\n\nconst Loading: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={(<CircularProgress color=\"secondary\" />)}\n        title=\"Loading\"\n        subheader=\"Please, wait.\"\n      />\n    </Card>\n  )\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Window, SmartList } from 'react-benzin';\nimport { Solution, RenderPropTypes } from '../../types';\n\nimport SolutionCard from '../../components/SolutionCard/SolutionCard';\nimport Loading from '../../components/Loading/Loading';\n\nimport { get } from '../../requests';\n\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: theme.spacing(4),\n\n    '& .MuiCard-root': {\n      width: '30%',\n    }\n  }\n}));\n\n\nconst Scoreboard: React.FC = () => {\n  const classes = useStyles();\n  const [solutions, setSolutions] = useState<Solution[]>([]);\n\n  const updateSolutions = (): void => {\n    get('scoreboard/').then(response => {\n        setSolutions(response.data);\n    });\n  };\n\n  const removeSolution = (id: number): void => {\n    updateSolutions();\n  };\n\n  useEffect(() => {\n    setTimeout(updateSolutions, 300);\n  }, []);\n\n  const renderItem: React.FC<RenderPropTypes> = ({ index, style }) => {\n    return (\n      <div style={style} className={classes.cell}>\n        <SolutionCard data={solutions[index]} removeThisCard={removeSolution}/>\n      </div>\n    )\n  };\n\n  return (\n    <Window type=\"mono\">\n      { solutions.length === 0 &&\n      <div className={classes.cell}>\n        <Loading/>\n      </div>\n      }\n      <SmartList\n        itemSize={300}\n        itemCount={solutions.length}\n        renderItem={renderItem}\n      />\n    </Window>\n  )\n};\n\n\nexport default Scoreboard;\n","import React from 'react';\n\nimport {\n  Typography,\n  Button,\n  List,\n  ListItem,\n  Link,\n  Avatar,\n  Divider,\n  makeStyles,\n} from '@material-ui/core';\n\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\n\nimport { Window, ContentSection } from 'react-benzin';\n\nimport developers from '../../developers.json';\n\nconst useStyles = makeStyles(theme => ({\n  mono: {\n    padding: theme.spacing(4),\n\n    '& .MuiAvatar-root': {\n      marginRight: theme.spacing(2),\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    }\n  },\n}));\n\n\n\n\nconst Contribute: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Window type=\"mono\">\n      <div className={classes.mono}>\n        <ContentSection sectionName=\"Thank You for using ChronoCube!\">\n          <p>\n            ChronoCube is an Open-Source application, and we welcome anyone who desires to help our project!\n          </p>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<TrendingUpIcon />}\n            href=\"https://github.com/users/Eug-VS/projects/3\"\n          >\n            Track our progress\n          </Button>\n        </ContentSection>\n        <ContentSection sectionName=\"Technology stack\">\n          <p> We only use modern and most relevant technologies to achieve the best results! </p>\n          <ul>\n            <li><Link href=\"https://www.django-rest-framework.org/\">\n              Django REST Framework\n            </Link></li>\n            <li><Link href=\"https://reactjs.org/\">\n              React.js\n            </Link></li>\n            <li><Link href=\"https://material-ui.com/\">\n              Material UI components\n            </Link></li>\n          </ul>\n          <p> Special thanks to other Open-Source projects which made ChronoCube possible: </p>\n          <ul>\n            <li><Link href=\"https://github.com/bvaughn/react-window\">\n              react-window\n            </Link></li>\n          </ul>\n        </ContentSection>\n        <ContentSection sectionName=\"How can I contribute to the project?\">\n          <p> Thank You for considering helping our project! </p>\n          <p>\n            All the development process is being tracked on\n            the <Link href=\"https://github.com/users/Eug-VS/projects/3\">KanBan board</Link>.\n            You can always check it to see what is the current state of the project.\n            To contribute your code, fork our repository and then open\n            a <Link href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">\n            Pull Request</Link>. We will carefully review and, hopefully, accept it!\n            If you are unfamiliar with this kind of workflow, we recommend\n            reading <Link href=\"https://github.com/features/project-management/\">GitHub guidelines</Link>.\n          </p>\n          <p>\n            We always welcome newcomers! If you are unfamiliar with certain technologies or even with the\n            development in general, it is great time to start learning something new!\n            Our community will kindly assist every your step, and with us you can easily become\n            highly-evaluated developer!\n          </p>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<NewReleasesIcon />}\n            href=\"https://github.com/Eug-VS/chrono-cube/issues/new\"\n          >\n            Suggest feature\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<BugReportIcon />}\n            href=\"https://github.com/Eug-VS/chrono-cube/issues/new\"\n          >\n            Report a bug\n          </Button>\n        </ContentSection>\n        <ContentSection sectionName=\"Developers\">\n          <List>\n            {\n              developers.map(developer => {\n                const githubUrl = `https://github.com/${developer.username}`;\n\n                return (\n                  <div key={developer.username}>\n                    <ListItem>\n                      <Link href={githubUrl}>\n                        <Avatar alt={developer.username} src={`${githubUrl}.png`} />\n                      </Link>\n                      <div>\n                        <Link href={githubUrl}>\n                          {developer.username}\n                        </Link>\n                        <Typography component=\"div\" color=\"textSecondary\">\n                          {developer.role}\n                        </Typography>\n                      </div>\n                    </ListItem>\n                    <Divider variant=\"middle\" />\n                  </div>\n                )\n              })\n            }\n            <ListItem>\n              <Avatar />\n              You can be here!\n            </ListItem>\n          </List>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            href=\"https://github.com/users/Eug-VS/projects/3\"\n          >\n            Join us!\n          </Button>\n        </ContentSection>\n      </div>\n    </Window>\n  );\n};\n\n\nexport default Contribute;\n","import React, {useState} from 'react';\n\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n} from '@material-ui/core';\nimport { User } from '../../types';\n\nimport { ContentSection } from 'react-benzin';\nimport { get, post } from '../../requests';\n\n\ninterface PropTypes {\n  setUser: (user: User) => void;\n}\n\nconst Registration: React.FC<PropTypes> = ({ setUser }) => {\n\n  const [username, setUsername] = useState<string>('');\n  const [isRememberMe, setIsRememberMe] = useState<boolean>(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setUsername(event.target.value);\n  };\n\n  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setIsRememberMe(event.target.checked);\n  };\n\n  const handleSubmit = (): void => {\n    if (username !== '') {\n      post('users/', { username })\n        .then(response => {\n          const user = response.data;\n          setUser(user);\n          if (isRememberMe) {\n            localStorage.setItem('userId', user.id);\n          }\n        })\n        .catch(err => {\n          get('users/').then(response => {\n            const user = response.data.filter((user: User) => user.username === username)[0];\n            setUser(user);\n            if (isRememberMe) {\n              localStorage.setItem('userId', user.id);\n            }\n          });\n        });\n    }\n  };\n\n  return (\n    <ContentSection sectionName=\"Tell us who you are\">\n      <p> Choose yourself a username to track your progress and compete with others: </p>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <TextField\n            variant=\"outlined\"\n            color=\"secondary\"\n            label=\"Username\"\n            value={username}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" onChange={handleCheck} />}\n            label=\"Remember me\"\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit}>\n            Submit!\n          </Button>\n        </Grid>\n      </Grid>\n    </ContentSection>\n  );\n};\n\n\nexport default Registration;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Button,\n  makeStyles,\n} from '@material-ui/core';\n\nimport Registration from './Registration';\nimport {\n  Window,\n  ContentSection,\n  SmartList,\n} from 'react-benzin';\nimport { User, Solution, RenderPropTypes } from '../../types';\n\nimport SolutionCard from '../../components/SolutionCard/SolutionCard';\n\nimport { get } from '../../requests';\n\n\nconst useStyles = makeStyles(theme => ({\n  primary: {\n    padding: theme.spacing(4),\n  },\n  cell: {\n    padding: theme.spacing(5),\n  },\n}));\n\n\ninterface PropTypes {\n  user: User;\n  setUser: (user: User) => void;\n}\n\n\nconst Profile: React.FC<PropTypes> = ({ user, setUser }) => {\n  const classes = useStyles();\n\n  const [profileSolutions, setProfileSolutions] = useState<Solution[]>([]);\n\n  const handleLogout = (): void => {\n    setUser({ username: 'anonymous', id: null });\n    localStorage.clear();\n  };\n\n  useEffect(() => {\n    get(`solutions/?author=${user.id}`).then(response => {\n      setProfileSolutions(response.data.reverse());\n    });\n  }, [user]);\n\n  const removeSolution = (id: number): void => {\n    setProfileSolutions(profileSolutions.filter((solution => solution.id !== id)));\n  };\n\n  const renderItem: React.FC<RenderPropTypes> = ({ index, style }) => {\n    return (\n      <div style={style} className={classes.cell}>\n        <SolutionCard data={profileSolutions[index]} removeThisCard={removeSolution} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Window type=\"primary\">\n        <div className={classes.primary}>\n          { user.id? (\n            <ContentSection sectionName={`Welcome back, ${user.username}!`}>\n              <p> Total amount of solutions: {profileSolutions.length} </p>\n              <p> You can always log out from your account! </p>\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleLogout}>\n                Logout\n              </Button>\n            </ContentSection>\n          ): (\n            <Registration setUser={setUser} />\n          )\n          }\n        </div>\n      </Window>\n      <Window type=\"secondary\" name=\"History\">\n        <SmartList\n          itemSize={270}\n          itemCount={profileSolutions.length}\n          renderItem={renderItem}\n        />\n      </Window>\n    </>\n  )\n};\n\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  BenzinThemeProvider,\n  Header,\n} from 'react-benzin';\nimport { User, Solution } from './types';\n\nimport 'typeface-roboto';\n\nimport Timer from './pages/Timer/Timer';\nimport Scoreboard from './pages/Scoreboard/Scoreboard';\nimport Contribute from './pages/Contribute/Contribute';\nimport Profile from './pages/Profile/Profile';\n\nimport TimerIcon from '@material-ui/icons/Timer';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport { get } from './requests';\n\n\nconst App: React.FC = () => {\n  const [page, setPage] = useState<string>('app');\n  const [user, setUser] = useState<User>({ username: 'anonymous', id: null });\n  const [recentSolutions, setRecentSolutions] = useState<Solution[]>([]);\n\n  const headerContents = {\n    app: (<TimerIcon />),\n    profile: (<AccountCircleIcon />),\n    scoreboard: (<AssignmentIcon />),\n    contribute: (<GitHubIcon />),\n  };\n\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      get('users/').then(response => {\n        setUser(response.data.filter((user: User) => user.id === +userId)[0]);\n      });\n    }\n  }, []);\n\n  const Page: React.FC<{ page: string }> = ({ page }) => {\n    switch (page) {\n      case 'app':\n        return (\n          <Timer\n            user={user}\n            recentSolutions={recentSolutions}\n            setRecentSolutions={setRecentSolutions}\n            setPage={setPage}\n          />\n        );\n\n      case 'profile':\n        return <Profile user={user} setUser={setUser} />;\n\n      case 'scoreboard':\n        return <Scoreboard />;\n\n      case 'contribute':\n        return <Contribute />;\n\n      default:\n        return <Contribute />;\n    }\n  };\n\n  return (\n    <BenzinThemeProvider>\n      <Header\n        logo={{\n          title: 'ChronoCube',\n          icon: null\n        }}\n        contents={headerContents}\n        page={page}\n        setPage={setPage}/>\n      <Page page={page} />\n    </BenzinThemeProvider>\n  );\n};\n\ndocument.body.style.overflow = 'hidden';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}